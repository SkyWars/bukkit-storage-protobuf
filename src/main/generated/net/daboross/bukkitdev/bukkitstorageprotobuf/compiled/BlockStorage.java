// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/block_storage.proto

package net.daboross.bukkitdev.bukkitstorageprotobuf.compiled;

public final class BlockStorage {
  private BlockStorage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface InventoryItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required uint32 location = 1;
    boolean hasLocation();
    int getLocation();
    
    // required uint32 id = 2;
    boolean hasId();
    int getId();
    
    // optional uint32 amount = 3;
    boolean hasAmount();
    int getAmount();
    
    // optional uint32 data = 4;
    boolean hasData();
    int getData();
  }
  public static final class InventoryItem extends
      com.google.protobuf.GeneratedMessageLite
      implements InventoryItemOrBuilder {
    // Use InventoryItem.newBuilder() to construct.
    private InventoryItem(Builder builder) {
      super(builder);
    }
    private InventoryItem(boolean noInit) {}
    
    private static final InventoryItem defaultInstance;
    public static InventoryItem getDefaultInstance() {
      return defaultInstance;
    }
    
    public InventoryItem getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required uint32 location = 1;
    public static final int LOCATION_FIELD_NUMBER = 1;
    private int location_;
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getLocation() {
      return location_;
    }
    
    // required uint32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getId() {
      return id_;
    }
    
    // optional uint32 amount = 3;
    public static final int AMOUNT_FIELD_NUMBER = 3;
    private int amount_;
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAmount() {
      return amount_;
    }
    
    // optional uint32 data = 4;
    public static final int DATA_FIELD_NUMBER = 4;
    private int data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getData() {
      return data_;
    }
    
    private void initFields() {
      location_ = 0;
      id_ = 0;
      amount_ = 0;
      data_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLocation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, amount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, data_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, amount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, data_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem, Builder>
        implements net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItemOrBuilder {
      // Construct using net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        location_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem getDefaultInstanceForType() {
        return net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.getDefaultInstance();
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem build() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem buildPartial() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem result = new net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.location_ = location_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem other) {
        if (other == net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.getDefaultInstance()) return this;
        if (other.hasLocation()) {
          setLocation(other.getLocation());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLocation()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              location_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              amount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              data_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 location = 1;
      private int location_ ;
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLocation() {
        return location_;
      }
      public Builder setLocation(int value) {
        bitField0_ |= 0x00000001;
        location_ = value;
        
        return this;
      }
      public Builder clearLocation() {
        bitField0_ = (bitField0_ & ~0x00000001);
        location_ = 0;
        
        return this;
      }
      
      // required uint32 id = 2;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        
        return this;
      }
      
      // optional uint32 amount = 3;
      private int amount_ ;
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAmount() {
        return amount_;
      }
      public Builder setAmount(int value) {
        bitField0_ |= 0x00000004;
        amount_ = value;
        
        return this;
      }
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        amount_ = 0;
        
        return this;
      }
      
      // optional uint32 data = 4;
      private int data_ ;
      public boolean hasData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getData() {
        return data_;
      }
      public Builder setData(int value) {
        bitField0_ |= 0x00000008;
        data_ = value;
        
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.InventoryItem)
    }
    
    static {
      defaultInstance = new InventoryItem(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.InventoryItem)
  }
  
  public interface BlockInventoryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.InventoryItem item = 1;
    java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem> 
        getItemList();
    net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem getItem(int index);
    int getItemCount();
    
    // required uint32 length = 2;
    boolean hasLength();
    int getLength();
  }
  public static final class BlockInventory extends
      com.google.protobuf.GeneratedMessageLite
      implements BlockInventoryOrBuilder {
    // Use BlockInventory.newBuilder() to construct.
    private BlockInventory(Builder builder) {
      super(builder);
    }
    private BlockInventory(boolean noInit) {}
    
    private static final BlockInventory defaultInstance;
    public static BlockInventory getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlockInventory getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.InventoryItem item = 1;
    public static final int ITEM_FIELD_NUMBER = 1;
    private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem> item_;
    public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem> getItemList() {
      return item_;
    }
    public java.util.List<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItemOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    public int getItemCount() {
      return item_.size();
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem getItem(int index) {
      return item_.get(index);
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItemOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }
    
    // required uint32 length = 2;
    public static final int LENGTH_FIELD_NUMBER = 2;
    private int length_;
    public boolean hasLength() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getLength() {
      return length_;
    }
    
    private void initFields() {
      item_ = java.util.Collections.emptyList();
      length_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(1, item_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, length_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, item_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, length_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory, Builder>
        implements net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventoryOrBuilder {
      // Construct using net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        length_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory getDefaultInstanceForType() {
        return net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance();
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory build() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory buildPartial() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory result = new net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.item_ = item_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.length_ = length_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory other) {
        if (other == net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance()) return this;
        if (!other.item_.isEmpty()) {
          if (item_.isEmpty()) {
            item_ = other.item_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureItemIsMutable();
            item_.addAll(other.item_);
          }
          
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLength()) {
          
          return false;
        }
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.Builder subBuilder = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addItem(subBuilder.buildPartial());
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              length_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.InventoryItem item = 1;
      private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = new java.util.ArrayList<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem>(item_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem> getItemList() {
        return java.util.Collections.unmodifiableList(item_);
      }
      public int getItemCount() {
        return item_.size();
      }
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem getItem(int index) {
        return item_.get(index);
      }
      public Builder setItem(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.set(index, value);
        
        return this;
      }
      public Builder setItem(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addItem(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(value);
        
        return this;
      }
      public Builder addItem(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(index, value);
        
        return this;
      }
      public Builder addItem(
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(builderForValue.build());
        
        return this;
      }
      public Builder addItem(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllItem(
          java.lang.Iterable<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.InventoryItem> values) {
        ensureItemIsMutable();
        super.addAll(values, item_);
        
        return this;
      }
      public Builder clearItem() {
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeItem(int index) {
        ensureItemIsMutable();
        item_.remove(index);
        
        return this;
      }
      
      // required uint32 length = 2;
      private int length_ ;
      public boolean hasLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLength() {
        return length_;
      }
      public Builder setLength(int value) {
        bitField0_ |= 0x00000002;
        length_ = value;
        
        return this;
      }
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        length_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockInventory)
    }
    
    static {
      defaultInstance = new BlockInventory(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockInventory)
  }
  
  public interface BlockOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required uint32 id = 1;
    boolean hasId();
    int getId();
    
    // optional uint32 data = 2;
    boolean hasData();
    int getData();
    
    // optional .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockInventory inventory = 3;
    boolean hasInventory();
    net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory getInventory();
  }
  public static final class Block extends
      com.google.protobuf.GeneratedMessageLite
      implements BlockOrBuilder {
    // Use Block.newBuilder() to construct.
    private Block(Builder builder) {
      super(builder);
    }
    private Block(boolean noInit) {}
    
    private static final Block defaultInstance;
    public static Block getDefaultInstance() {
      return defaultInstance;
    }
    
    public Block getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional uint32 data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private int data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getData() {
      return data_;
    }
    
    // optional .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockInventory inventory = 3;
    public static final int INVENTORY_FIELD_NUMBER = 3;
    private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory inventory_;
    public boolean hasInventory() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory getInventory() {
      return inventory_;
    }
    
    private void initFields() {
      id_ = 0;
      data_ = 0;
      inventory_ = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasInventory()) {
        if (!getInventory().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, inventory_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, inventory_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block, Builder>
        implements net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockOrBuilder {
      // Construct using net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        inventory_ = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block getDefaultInstanceForType() {
        return net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.getDefaultInstance();
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block build() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block buildPartial() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block result = new net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inventory_ = inventory_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block other) {
        if (other == net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasInventory()) {
          mergeInventory(other.getInventory());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (hasInventory()) {
          if (!getInventory().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              data_ = input.readUInt32();
              break;
            }
            case 26: {
              net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.Builder subBuilder = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.newBuilder();
              if (hasInventory()) {
                subBuilder.mergeFrom(getInventory());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInventory(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }
      
      // optional uint32 data = 2;
      private int data_ ;
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getData() {
        return data_;
      }
      public Builder setData(int value) {
        bitField0_ |= 0x00000002;
        data_ = value;
        
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = 0;
        
        return this;
      }
      
      // optional .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockInventory inventory = 3;
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory inventory_ = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance();
      public boolean hasInventory() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory getInventory() {
        return inventory_;
      }
      public Builder setInventory(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        inventory_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setInventory(
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.Builder builderForValue) {
        inventory_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeInventory(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            inventory_ != net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance()) {
          inventory_ =
            net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.newBuilder(inventory_).mergeFrom(value).buildPartial();
        } else {
          inventory_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearInventory() {
        inventory_ = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockInventory.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.Block)
    }
    
    static {
      defaultInstance = new Block(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.Block)
  }
  
  public interface BlockRowOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.Block block = 1;
    java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block> 
        getBlockList();
    net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block getBlock(int index);
    int getBlockCount();
  }
  public static final class BlockRow extends
      com.google.protobuf.GeneratedMessageLite
      implements BlockRowOrBuilder {
    // Use BlockRow.newBuilder() to construct.
    private BlockRow(Builder builder) {
      super(builder);
    }
    private BlockRow(boolean noInit) {}
    
    private static final BlockRow defaultInstance;
    public static BlockRow getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlockRow getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.Block block = 1;
    public static final int BLOCK_FIELD_NUMBER = 1;
    private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block> block_;
    public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block> getBlockList() {
      return block_;
    }
    public java.util.List<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockOrBuilder> 
        getBlockOrBuilderList() {
      return block_;
    }
    public int getBlockCount() {
      return block_.size();
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block getBlock(int index) {
      return block_.get(index);
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockOrBuilder getBlockOrBuilder(
        int index) {
      return block_.get(index);
    }
    
    private void initFields() {
      block_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getBlockCount(); i++) {
        if (!getBlock(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < block_.size(); i++) {
        output.writeMessage(1, block_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < block_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, block_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow, Builder>
        implements net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRowOrBuilder {
      // Construct using net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        block_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow getDefaultInstanceForType() {
        return net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.getDefaultInstance();
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow build() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow buildPartial() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow result = new net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          block_ = java.util.Collections.unmodifiableList(block_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.block_ = block_;
        return result;
      }
      
      public Builder mergeFrom(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow other) {
        if (other == net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.getDefaultInstance()) return this;
        if (!other.block_.isEmpty()) {
          if (block_.isEmpty()) {
            block_ = other.block_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBlockIsMutable();
            block_.addAll(other.block_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getBlockCount(); i++) {
          if (!getBlock(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.Builder subBuilder = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBlock(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.Block block = 1;
      private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block> block_ =
        java.util.Collections.emptyList();
      private void ensureBlockIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          block_ = new java.util.ArrayList<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block>(block_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block> getBlockList() {
        return java.util.Collections.unmodifiableList(block_);
      }
      public int getBlockCount() {
        return block_.size();
      }
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block getBlock(int index) {
        return block_.get(index);
      }
      public Builder setBlock(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlockIsMutable();
        block_.set(index, value);
        
        return this;
      }
      public Builder setBlock(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.Builder builderForValue) {
        ensureBlockIsMutable();
        block_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addBlock(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlockIsMutable();
        block_.add(value);
        
        return this;
      }
      public Builder addBlock(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlockIsMutable();
        block_.add(index, value);
        
        return this;
      }
      public Builder addBlock(
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.Builder builderForValue) {
        ensureBlockIsMutable();
        block_.add(builderForValue.build());
        
        return this;
      }
      public Builder addBlock(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block.Builder builderForValue) {
        ensureBlockIsMutable();
        block_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllBlock(
          java.lang.Iterable<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.Block> values) {
        ensureBlockIsMutable();
        super.addAll(values, block_);
        
        return this;
      }
      public Builder clearBlock() {
        block_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeBlock(int index) {
        ensureBlockIsMutable();
        block_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockRow)
    }
    
    static {
      defaultInstance = new BlockRow(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockRow)
  }
  
  public interface BlockPlainOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockRow row = 1;
    java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow> 
        getRowList();
    net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow getRow(int index);
    int getRowCount();
  }
  public static final class BlockPlain extends
      com.google.protobuf.GeneratedMessageLite
      implements BlockPlainOrBuilder {
    // Use BlockPlain.newBuilder() to construct.
    private BlockPlain(Builder builder) {
      super(builder);
    }
    private BlockPlain(boolean noInit) {}
    
    private static final BlockPlain defaultInstance;
    public static BlockPlain getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlockPlain getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockRow row = 1;
    public static final int ROW_FIELD_NUMBER = 1;
    private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow> row_;
    public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow> getRowList() {
      return row_;
    }
    public java.util.List<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    public int getRowCount() {
      return row_.size();
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow getRow(int index) {
      return row_.get(index);
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }
    
    private void initFields() {
      row_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getRowCount(); i++) {
        if (!getRow(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(1, row_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain, Builder>
        implements net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlainOrBuilder {
      // Construct using net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        row_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain getDefaultInstanceForType() {
        return net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.getDefaultInstance();
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain build() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain buildPartial() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain result = new net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          row_ = java.util.Collections.unmodifiableList(row_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.row_ = row_;
        return result;
      }
      
      public Builder mergeFrom(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain other) {
        if (other == net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.getDefaultInstance()) return this;
        if (!other.row_.isEmpty()) {
          if (row_.isEmpty()) {
            row_ = other.row_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRowIsMutable();
            row_.addAll(other.row_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getRowCount(); i++) {
          if (!getRow(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.Builder subBuilder = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRow(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockRow row = 1;
      private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          row_ = new java.util.ArrayList<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow>(row_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow> getRowList() {
        return java.util.Collections.unmodifiableList(row_);
      }
      public int getRowCount() {
        return row_.size();
      }
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow getRow(int index) {
        return row_.get(index);
      }
      public Builder setRow(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowIsMutable();
        row_.set(index, value);
        
        return this;
      }
      public Builder setRow(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.Builder builderForValue) {
        ensureRowIsMutable();
        row_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addRow(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowIsMutable();
        row_.add(value);
        
        return this;
      }
      public Builder addRow(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowIsMutable();
        row_.add(index, value);
        
        return this;
      }
      public Builder addRow(
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.Builder builderForValue) {
        ensureRowIsMutable();
        row_.add(builderForValue.build());
        
        return this;
      }
      public Builder addRow(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow.Builder builderForValue) {
        ensureRowIsMutable();
        row_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllRow(
          java.lang.Iterable<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockRow> values) {
        ensureRowIsMutable();
        super.addAll(values, row_);
        
        return this;
      }
      public Builder clearRow() {
        row_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeRow(int index) {
        ensureRowIsMutable();
        row_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockPlain)
    }
    
    static {
      defaultInstance = new BlockPlain(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockPlain)
  }
  
  public interface BlockAreaOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockPlain plain = 1;
    java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain> 
        getPlainList();
    net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain getPlain(int index);
    int getPlainCount();
  }
  public static final class BlockArea extends
      com.google.protobuf.GeneratedMessageLite
      implements BlockAreaOrBuilder {
    // Use BlockArea.newBuilder() to construct.
    private BlockArea(Builder builder) {
      super(builder);
    }
    private BlockArea(boolean noInit) {}
    
    private static final BlockArea defaultInstance;
    public static BlockArea getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlockArea getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockPlain plain = 1;
    public static final int PLAIN_FIELD_NUMBER = 1;
    private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain> plain_;
    public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain> getPlainList() {
      return plain_;
    }
    public java.util.List<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlainOrBuilder> 
        getPlainOrBuilderList() {
      return plain_;
    }
    public int getPlainCount() {
      return plain_.size();
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain getPlain(int index) {
      return plain_.get(index);
    }
    public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlainOrBuilder getPlainOrBuilder(
        int index) {
      return plain_.get(index);
    }
    
    private void initFields() {
      plain_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getPlainCount(); i++) {
        if (!getPlain(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < plain_.size(); i++) {
        output.writeMessage(1, plain_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < plain_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, plain_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea, Builder>
        implements net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockAreaOrBuilder {
      // Construct using net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        plain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea getDefaultInstanceForType() {
        return net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea.getDefaultInstance();
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea build() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea buildPartial() {
        net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea result = new net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          plain_ = java.util.Collections.unmodifiableList(plain_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.plain_ = plain_;
        return result;
      }
      
      public Builder mergeFrom(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea other) {
        if (other == net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockArea.getDefaultInstance()) return this;
        if (!other.plain_.isEmpty()) {
          if (plain_.isEmpty()) {
            plain_ = other.plain_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlainIsMutable();
            plain_.addAll(other.plain_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getPlainCount(); i++) {
          if (!getPlain(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.Builder subBuilder = net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlain(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockPlain plain = 1;
      private java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain> plain_ =
        java.util.Collections.emptyList();
      private void ensurePlainIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          plain_ = new java.util.ArrayList<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain>(plain_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain> getPlainList() {
        return java.util.Collections.unmodifiableList(plain_);
      }
      public int getPlainCount() {
        return plain_.size();
      }
      public net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain getPlain(int index) {
        return plain_.get(index);
      }
      public Builder setPlain(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlainIsMutable();
        plain_.set(index, value);
        
        return this;
      }
      public Builder setPlain(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.Builder builderForValue) {
        ensurePlainIsMutable();
        plain_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addPlain(net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlainIsMutable();
        plain_.add(value);
        
        return this;
      }
      public Builder addPlain(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlainIsMutable();
        plain_.add(index, value);
        
        return this;
      }
      public Builder addPlain(
          net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.Builder builderForValue) {
        ensurePlainIsMutable();
        plain_.add(builderForValue.build());
        
        return this;
      }
      public Builder addPlain(
          int index, net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain.Builder builderForValue) {
        ensurePlainIsMutable();
        plain_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllPlain(
          java.lang.Iterable<? extends net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockStorage.BlockPlain> values) {
        ensurePlainIsMutable();
        super.addAll(values, plain_);
        
        return this;
      }
      public Builder clearPlain() {
        plain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removePlain(int index) {
        ensurePlainIsMutable();
        plain_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockArea)
    }
    
    static {
      defaultInstance = new BlockArea(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.daboross.bukkitdev.bukkitstorageprotobuf.compiled.BlockArea)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
